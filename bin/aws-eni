#!/usr/bin/env ruby

require 'aws-eni'

eni = Aws::ENI.new

begin
  case ARGV[0]

  # list command
  when 'list'
    eni.list.each do |dev|
      # print devices
      print "#{dev['device']}:", "\n"
      print "  #{dev['private_ip']}"
      print "\n" if dev['public_ip'] == nil
      print " => #{dev['public_ip']}", "\n" if dev['public_ip'] != nil
      # print "MAC: ", dev['mac'], "\n"
    end

  # sync command
  when 'sync'
    if eni.sync != 0
      puts 'synchronized interface config'
    else
      puts 'network interface config already in sync'
    end

  # add command
  when 'add'
    @add = eni.add(ARGV[1], ARGV[2])
    puts "added #{@add['device']} with private ip #{@add['private_ip']}"

  # remove command
  when 'remove'
    @remove = eni.remove(ARGV[1], ARGV[2], ARGV[3])
    if @remove['release'] == true
      puts "removed #{@remove['private_ip']} and dissociated #{remove['public_ip']} from #{@remove['device']}"
    else
      puts "removed #{@remove['private_ip']} from #{@remove['device']}"
    end

  # assoc command
  when 'associate'
    @assoc = eni.assoc(ARGV[1], ARGV[2])
    puts "associated #{@assoc['private_ip']} => #{@assoc['public_ip']}"


  end


# handle library exceptions
rescue Aws::ENI::Error => e
  abort "Error: " + e.message
end
